<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>GoLang Korea on DevBJ.com</title>
    <link>https://devbj.com/golangkorea/</link>
    <description>Recent content in GoLang Korea on DevBJ.com</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Fri, 19 Aug 2016 23:35:49 -0400</lastBuildDate>
    
	<atom:link href="https://devbj.com/golangkorea/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Go 둘러보기 - encoding/json 패키지</title>
      <link>https://devbj.com/golangkorea/go-walkthrough/encoding-json-package/</link>
      <pubDate>Sat, 03 Dec 2016 01:02:26 +0900</pubDate>
      
      <guid>https://devbj.com/golangkorea/go-walkthrough/encoding-json-package/</guid>
      <description>Go Walkthrough 시리즈의 Go Walkthrough: encoding/json package를 번역한 글입니다. 좋든 나쁘든, JSON은 인터넷의 인코딩이다. 이것의 공식적인 정의는 냅킨 뒷면에 쓸 수 있을 정도로 간단</description>
    </item>
    
    <item>
      <title>Go 둘러보기 - encoding 패키지</title>
      <link>https://devbj.com/golangkorea/go-walkthrough/encoding-package/</link>
      <pubDate>Wed, 09 Nov 2016 15:33:33 +0900</pubDate>
      
      <guid>https://devbj.com/golangkorea/go-walkthrough/encoding-package/</guid>
      <description>Go Walkthrough 시리즈의 Go Walkthrough: encoding package를 번역한 글입니다. 우리는 이제까지 로우(raw) 바이트 스트림과 제한된 바이트 슬라이스를 다뤄봤지만 단순히 바이트만을</description>
    </item>
    
    <item>
      <title>Go 둘러보기 - bytes &#43; strings 패키지</title>
      <link>https://devbj.com/golangkorea/go-walkthrough/bytes-strings-packages/</link>
      <pubDate>Wed, 02 Nov 2016 18:30:33 +0900</pubDate>
      
      <guid>https://devbj.com/golangkorea/go-walkthrough/bytes-strings-packages/</guid>
      <description>Go Walkthrough 시리즈의 Go Walkthrough: bytes + strings packages를 번역한 글입니다. 우린 지난번 포스트에서 바이트 스트림을 다뤄봤는데 가끔은 제한적인 범위에서, 인메모리 바이트 슬</description>
    </item>
    
    <item>
      <title>Go 둘러보기 - io 패키지</title>
      <link>https://devbj.com/golangkorea/go-walkthrough/io-package/</link>
      <pubDate>Wed, 26 Oct 2016 02:30:33 +0900</pubDate>
      
      <guid>https://devbj.com/golangkorea/go-walkthrough/io-package/</guid>
      <description>Go Walkthrough 시리즈의 Go Walkthrough: io package를 번역한 글입니다. Go는 바이트(bytes)를 사용하여 작업하기 위해 만들어진 프로그래밍 언어이다. 바이트의 리스트</description>
    </item>
    
    <item>
      <title>Go에서 애플리케이션 설계하기</title>
      <link>https://devbj.com/golangkorea/structuring-applications-in-go/</link>
      <pubDate>Mon, 10 Oct 2016 21:11:16 +0900</pubDate>
      
      <guid>https://devbj.com/golangkorea/structuring-applications-in-go/</guid>
      <description>Structuring Applications in Go을 번역한 글입니다. 개요 Go를 배울 때 가장 어려웠던 부분은 애플리케이션을 어떻게 설계하는가였다. Go 이전에, 나는 Rails 애플리케이션을 만들었었는데</description>
    </item>
    
    <item>
      <title>Go와 객체지향</title>
      <link>https://devbj.com/golangkorea/go-start/object-oriented/</link>
      <pubDate>Sun, 02 Oct 2016 00:51:06 +0900</pubDate>
      
      <guid>https://devbj.com/golangkorea/go-start/object-oriented/</guid>
      <description>객체지향 프로그래밍 Go는 클래스(Class)가 없다!! Struct가 Class의 역할을 수행 할 수 있기는 하지만 메서드도 구조체로부터 분리되는 구성을</description>
    </item>
    
    <item>
      <title>Go의 주요 특징들</title>
      <link>https://devbj.com/golangkorea/go-start/feature/</link>
      <pubDate>Mon, 12 Sep 2016 13:10:03 +0900</pubDate>
      
      <guid>https://devbj.com/golangkorea/go-start/feature/</guid>
      <description>단순함 Go 언어는 단순함(simplicity)과 실용성(pragmatism)을 지향하는 언어로 이 두가지 철학이 다른 모든 것들 보다 상위에 있다. go 언어</description>
    </item>
    
    <item>
      <title>Go언어 시작하기</title>
      <link>https://devbj.com/golangkorea/go-start/getting-start/</link>
      <pubDate>Sun, 28 Aug 2016 15:10:07 +0830</pubDate>
      
      <guid>https://devbj.com/golangkorea/go-start/getting-start/</guid>
      <description>Go 언어에 대해서 구글이 2009년에 만든 비교적 새로운 프로그래밍 언어다. 2009년이면 거의 7년 이상된 구닥다리 언어잖아? 라고 생각 할 수 있겠으나, Rub</description>
    </item>
    
    <item>
      <title>vim-go를 이용한 go 개발 환경 구축</title>
      <link>https://devbj.com/golangkorea/vim-go/</link>
      <pubDate>Mon, 22 Aug 2016 22:57:14 +0900</pubDate>
      
      <guid>https://devbj.com/golangkorea/vim-go/</guid>
      <description>Vim Vim은 Emacs와 함께 (적어도 리눅스에서는) 가장 널리 사용하는 에디터일 것이다. 가볍고 빠르며, 어디에서나 실행되기 때문에 그 단순함에도 불구하고 여</description>
    </item>
    
    <item>
      <title>Golang 프로젝트에 TDD 도입하기</title>
      <link>https://devbj.com/golangkorea/tdd-with-golang/</link>
      <pubDate>Sat, 20 Aug 2016 12:15:44 +0900</pubDate>
      
      <guid>https://devbj.com/golangkorea/tdd-with-golang/</guid>
      <description>여기에서 사용한 테스트 코드는 Bitbucket 에서 다운로드 할 수 있다. TDD 클라우드와 MSA와 REST의 등장으로 TDD가 재조명 받고 있다. TDD를 제대로 적용하려면 상당</description>
    </item>
    
  </channel>
</rss>